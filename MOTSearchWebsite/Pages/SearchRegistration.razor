@page "/SearchRegistration"
@inject HttpClient http
@using Newtonsoft.Json;
@using SharedLibrary;

<h3 font-size:25px">Please enter registration number.</h3>

<EditForm Model="@_model" OnValidSubmit="@SearchRegistrationNumber">
    <DataAnnotationsValidator />
    <div class="form-inline">
        <InputText class="form-control mr-1" style="border:1px solid" @bind-Value="_model.RegistrationNumber" />
        <input class="btn btn-primary client-btn" type="submit" value="Search Registration" />
    </div>
    <div class="col-md-5"><ValidationMessage For="@(() => _model.RegistrationNumber)" /> </div>
</EditForm>


@if (_isRetrieved)
{
    <h3 style="padding: 10px">Your MOT Details:</h3>

    <div class="row" style="padding: 10px">
        <div class="col-6 col-md-2" style="font-weight: bold">
            <label>Registration Number: </label>
        </div>

        <div class="col-10">
            <label class="col-2" style="text-decoration: underline">@_vehicleDetails.RegistrationNumber</label>

        </div>

    </div>

    <div class="row" style="padding: 10px">
        <div class="col" style="font-weight: bold">
            <label>Make: </label>
        </div>

        <div class="col-10">
            <label class="col-2" style="text-decoration: underline">@_vehicleDetails.Make</label>

        </div>

    </div>

    <div class="row" style="padding: 10px">
        <div class="col" style="font-weight: bold">
            <label>Model: </label>
        </div>

        <div class="col-10">
            <label class="col-2" style="text-decoration: underline">@_vehicleDetails.Model</label>

        </div>

    </div>

    <div class="row" style="padding: 10px">
        <div class="col" style="font-weight: bold">
            <label>Color: </label>
        </div>

        <div class="col-10">
            <label class="col-2" style="text-decoration: underline">@_vehicleDetails.Colour</label>

        </div>

    </div>


    <div class="row" style="padding: 10px">

        <div class="col" style="font-weight: bold">
            <label>Expiry Date: </label>
        </div>

        <div class="col-10">
            <label class="col-2" style="text-decoration: underline">@_vehicleDetails.ExpiryDate</label>

        </div>

    </div>

    <div class="row" style="padding: 10px">
        <div class="col" style="font-weight: bold">
            <label>Milage at Last MOT: </label>
        </div>

        <div class="col-10">
            <label class="col-2" style="text-decoration: underline">@_vehicleDetails.Milage</label>

        </div>

    </div>
}

@if (_unsuccesful)
{
    <div class="col-md-5">

        <label style="color: red; font-size: 20px">@_unsuccesfulMessage </label>
    </div>
}

@code {

    private string _registrarionNumber { get; set; }
    MOTDetailModel _vehicleDetails;
    // This is a helper instance object so I can validate if a user has entered too many characters or entered nothing at all.
    RegistrationNumberModel _model = new RegistrationNumberModel();
    private bool _isRetrieved = false;
    private bool _unsuccesful = false;
    private string _unsuccesfulMessage = "Oops! there was an error retrieving your details please check if the registration number is correct";

    /// <summary>
    /// Perform a get request to retrieve vehicle details based on the registration number.
    /// </summary>
    /// <returns></returns>
    private async Task SearchRegistrationNumber()
    {
        var response = await http.GetAsync($"http://localhost:7071/api/SearchRegistration?Registration={_model.RegistrationNumber}");

        if (response.IsSuccessStatusCode)
        {
            // Read the json data.
            var something = response.Content.ReadAsStringAsync().Result;

            // Deserialize the data as vehicle detail model.
            _vehicleDetails = JsonConvert.DeserializeObject<MOTDetailModel>(something);
            _isRetrieved = true;
        }
        else
        {
            // If there was an error on the api to retrieve the details display a meaningful message.
            _unsuccesful = true;
        }
    }

}
